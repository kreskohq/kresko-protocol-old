/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { BasicOracle } from "../BasicOracle";

export class BasicOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    oracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicOracle> {
    return super.deploy(oracle_, overrides || {}) as Promise<BasicOracle>;
  }
  getDeployTransaction(
    oracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle_, overrides || {});
  }
  attach(address: string): BasicOracle {
    return super.attach(address) as BasicOracle;
  }
  connect(signer: Signer): BasicOracle__factory {
    return super.connect(signer) as BasicOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicOracle {
    return new Contract(address, _abi, signerOrProvider) as BasicOracle;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "SetReporter",
    type: "event",
  },
  {
    inputs: [],
    name: "reporter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "setReporter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610609380380610609833981810160405281019061003291906100d6565b6100418161004760201b60201c565b50610172565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb4eda453b9dd76fa43a6adc49c2c2ae46d7d3dc55c5906261a33e0decfbec057816040516100b6919061010e565b60405180910390a150565b6000815190506100d08161015b565b92915050565b6000602082840312156100e857600080fd5b60006100f6848285016100c1565b91505092915050565b61010881610129565b82525050565b600060208201905061012360008301846100ff565b92915050565b60006101348261013b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61016481610129565b811461016f57600080fd5b50565b610488806101816000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063010ec441146100515780633fa4f2451461006f5780634c9250321461008d57806355241077146100a9575b600080fd5b6100596100c5565b6040516100669190610358565b60405180910390f35b6100776100e9565b6040516100849190610393565b60405180910390f35b6100a760048036038101906100a291906102c5565b6100ef565b005b6100c360048036038101906100be91906102ee565b610189565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017490610373565b60405180910390fd5b61018681610221565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e90610373565b60405180910390fd5b8060018190555050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb4eda453b9dd76fa43a6adc49c2c2ae46d7d3dc55c5906261a33e0decfbec057816040516102909190610358565b60405180910390a150565b6000813590506102aa81610424565b92915050565b6000813590506102bf8161043b565b92915050565b6000602082840312156102d757600080fd5b60006102e58482850161029b565b91505092915050565b60006020828403121561030057600080fd5b600061030e848285016102b0565b91505092915050565b610320816103bf565b82525050565b60006103336011836103ae565b915061033e826103fb565b602082019050919050565b610352816103f1565b82525050565b600060208201905061036d6000830184610317565b92915050565b6000602082019050818103600083015261038c81610326565b9050919050565b60006020820190506103a86000830184610349565b92915050565b600082825260208201905092915050565b60006103ca826103d1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f53656e646572206e6f74206f7261636c65000000000000000000000000000000600082015250565b61042d816103bf565b811461043857600080fd5b50565b610444816103f1565b811461044f57600080fd5b5056fea26469706673582212207bc7a3e7676444a264e2b5390fb0d85da74bfe27d471338293daa9eecd80b82264736f6c63430008040033";

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Reserve } from "../Reserve";

export class Reserve__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    stableToken_: string,
    kresko_: string,
    amm_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Reserve> {
    return super.deploy(
      stableToken_,
      kresko_,
      amm_,
      overrides || {}
    ) as Promise<Reserve>;
  }
  getDeployTransaction(
    stableToken_: string,
    kresko_: string,
    amm_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      stableToken_,
      kresko_,
      amm_,
      overrides || {}
    );
  }
  attach(address: string): Reserve {
    return super.attach(address) as Reserve;
  }
  connect(signer: Signer): Reserve__factory {
    return super.connect(signer) as Reserve__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reserve {
    return new Contract(address, _abi, signerOrProvider) as Reserve;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stableToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "kresko_",
        type: "address",
      },
      {
        internalType: "address",
        name: "amm_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "amm",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kresko",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stableToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferStableTokenToAMM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107a93803806107a983398181016040528101906100329190610111565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101a9565b60008151905061010b81610192565b92915050565b60008060006060848603121561012657600080fd5b6000610134868287016100fc565b9350506020610145868287016100fc565b9250506040610156868287016100fc565b9150509250925092565b600061016b82610172565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61019b81610160565b81146101a657600080fd5b50565b6105f1806101b86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632a9439451461005157806383fe13e91461006f578063a9d75b2b1461008b578063d77e128c146100a9575b600080fd5b6100596100c7565b604051610066919061041f565b60405180910390f35b61008960048036038101906100849190610383565b6100ed565b005b6100936102e6565b6040516100a09190610463565b60405180910390f35b6100b161030a565b6040516100be919061041f565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101965750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cc9061049e565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161025292919061043a565b602060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a4919061035a565b6102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da9061047e565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061033f8161058d565b92915050565b600081359050610354816105a4565b92915050565b60006020828403121561036c57600080fd5b600061037a84828501610330565b91505092915050565b60006020828403121561039557600080fd5b60006103a384828501610345565b91505092915050565b6103b5816104cf565b82525050565b6103c481610517565b82525050565b60006103d7601c836104be565b91506103e28261053b565b602082019050919050565b60006103fa6018836104be565b915061040582610564565b602082019050919050565b6104198161050d565b82525050565b600060208201905061043460008301846103ac565b92915050565b600060408201905061044f60008301856103ac565b61045c6020830184610410565b9392505050565b600060208201905061047860008301846103bb565b92915050565b60006020820190508181036000830152610497816103ca565b9050919050565b600060208201905081810360008301526104b7816103ed565b9050919050565b600082825260208201905092915050565b60006104da826104ed565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052282610529565b9050919050565b6000610534826104ed565b9050919050565b7f526573657276653a20414d4d207472616e73666572206661696c656400000000600082015250565b7f53656e646572206e6f74204b7265736b6f206f7220414d4d0000000000000000600082015250565b610596816104e1565b81146105a157600080fd5b50565b6105ad8161050d565b81146105b857600080fd5b5056fea264697066735822122099564e743041e7b44c786c0012eb3c30dd7575d8008d5178e8e3cca5d0f692f064736f6c63430008040033";

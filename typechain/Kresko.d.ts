/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface KreskoInterface extends ethers.utils.Interface {
  functions: {
    "collateralLedgers(address,uint256)": FunctionFragment;
    "collateralPercentOwnershipInfos(address,address)": FunctionFragment;
    "depositCollateral(address,uint256)": FunctionFragment;
    "getCollateralAmountOwned(address,address)": FunctionFragment;
    "getTotalCollateralAmount(address)": FunctionFragment;
    "kAssetInfos(address)": FunctionFragment;
    "listKAsset(address,address,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "collateralLedgers",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralPercentOwnershipInfos",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateral",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollateralAmountOwned",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalCollateralAmount",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "kAssetInfos", values: [string]): string;
  encodeFunctionData(
    functionFragment: "listKAsset",
    values: [string, string, string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "collateralLedgers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralPercentOwnershipInfos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollateralAmountOwned",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalCollateralAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kAssetInfos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "listKAsset", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class Kresko extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: KreskoInterface;

  functions: {
    collateralLedgers(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "collateralLedgers(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralPercentOwnershipInfos(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        initialPercentageOwned: BigNumber;
        ledgerIndex: BigNumber;
      }
    >;

    "collateralPercentOwnershipInfos(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        initialPercentageOwned: BigNumber;
        ledgerIndex: BigNumber;
      }
    >;

    depositCollateral(
      kAsset: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "depositCollateral(address,uint256)"(
      kAsset: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getCollateralAmountOwned(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getCollateralAmountOwned(address,address)"(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTotalCollateralAmount(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTotalCollateralAmount(address)"(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    kAssetInfos(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, boolean] & {
        amm: string;
        reserve: string;
        active: boolean;
      }
    >;

    "kAssetInfos(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, boolean] & {
        amm: string;
        reserve: string;
        active: boolean;
      }
    >;

    listKAsset(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "listKAsset(address,address,address)"(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  collateralLedgers(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "collateralLedgers(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralPercentOwnershipInfos(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & {
      initialPercentageOwned: BigNumber;
      ledgerIndex: BigNumber;
    }
  >;

  "collateralPercentOwnershipInfos(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & {
      initialPercentageOwned: BigNumber;
      ledgerIndex: BigNumber;
    }
  >;

  depositCollateral(
    kAsset: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "depositCollateral(address,uint256)"(
    kAsset: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getCollateralAmountOwned(
    kAsset: string,
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getCollateralAmountOwned(address,address)"(
    kAsset: string,
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTotalCollateralAmount(
    kAsset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTotalCollateralAmount(address)"(
    kAsset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  kAssetInfos(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [string, string, boolean] & {
      amm: string;
      reserve: string;
      active: boolean;
    }
  >;

  "kAssetInfos(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [string, string, boolean] & {
      amm: string;
      reserve: string;
      active: boolean;
    }
  >;

  listKAsset(
    kAsset: string,
    amm: string,
    reserve: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "listKAsset(address,address,address)"(
    kAsset: string,
    amm: string,
    reserve: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    collateralLedgers(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collateralLedgers(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralPercentOwnershipInfos(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        initialPercentageOwned: BigNumber;
        ledgerIndex: BigNumber;
      }
    >;

    "collateralPercentOwnershipInfos(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        initialPercentageOwned: BigNumber;
        ledgerIndex: BigNumber;
      }
    >;

    depositCollateral(
      kAsset: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositCollateral(address,uint256)"(
      kAsset: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getCollateralAmountOwned(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCollateralAmountOwned(address,address)"(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTotalCollateralAmount(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalCollateralAmount(address)"(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kAssetInfos(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, boolean] & {
        amm: string;
        reserve: string;
        active: boolean;
      }
    >;

    "kAssetInfos(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, boolean] & {
        amm: string;
        reserve: string;
        active: boolean;
      }
    >;

    listKAsset(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "listKAsset(address,address,address)"(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    collateralLedgers(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collateralLedgers(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralPercentOwnershipInfos(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collateralPercentOwnershipInfos(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositCollateral(
      kAsset: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "depositCollateral(address,uint256)"(
      kAsset: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getCollateralAmountOwned(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCollateralAmountOwned(address,address)"(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTotalCollateralAmount(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalCollateralAmount(address)"(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kAssetInfos(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "kAssetInfos(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    listKAsset(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "listKAsset(address,address,address)"(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    collateralLedgers(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "collateralLedgers(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralPercentOwnershipInfos(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "collateralPercentOwnershipInfos(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    depositCollateral(
      kAsset: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "depositCollateral(address,uint256)"(
      kAsset: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getCollateralAmountOwned(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCollateralAmountOwned(address,address)"(
      kAsset: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalCollateralAmount(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalCollateralAmount(address)"(
      kAsset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kAssetInfos(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "kAssetInfos(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    listKAsset(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "listKAsset(address,address,address)"(
      kAsset: string,
      amm: string,
      reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
